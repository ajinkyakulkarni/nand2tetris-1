// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/PC.hdl

/**
 * A 16-bit counter with load and reset control bits.
 * if      (reset[t] == 1) out[t+1] = 0
 * else if (load[t] == 1)  out[t+1] = in[t]
 * else if (inc[t] == 1)   out[t+1] = out[t] + 1  (integer addition)
 * else                    out[t+1] = out[t]
 */

CHIP PC {
    IN in[16],load,inc,reset;
    OUT out[16];

    PARTS:
    Inc16(in=outcopy, out=outinc);
    Mux16(a=outcopy, b=outinc, sel=inc, out=maybeinc);
    Mux16(a=maybeinc, b=in, sel=load, out=maybeinc-or-in);
    Mux16(a=maybeinc-or-in, b=false, sel=reset, out=maybeinc-or-in-or-reset);
    Register(in=maybeinc-or-in-or-reset, load=true, out=outcopy, out=out);

    // Alternative that replaces the first Mux16 with two Or:
    // Inc16(in=outcopy, out=outinc);
    // Mux16(a=outinc, b=in, sel=load, out=inc-or-in);
    // Mux16(a=inc-or-in, b=false, sel=reset, out=inc-or-in-or-reset);
    // Or(a=reset, b=load, out=tmp);
    // Or(a=tmp, b=inc, out=loadreg);
    // Register(in=inc-or-in-or-reset, load=loadreg, out=outcopy, out=out);
}
